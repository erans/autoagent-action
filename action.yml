name: "AutoAgentAI Action"
description: "Composable GitHub Action to run AI agent prompts on a repository"
author: "Eran Sandler"
branding:
  icon: 'activity'
  color: 'purple'
inputs:
  rules:
    description: "YAML or JSON list of predefined rules to execute."
    required: false
    type: string
    default: "[]"

  custom:
    description: "Optional custom prompt appended to the predefined rules."
    required: false
    type: string
    default: ""

  customFiles:
    description: "YAML or JSON array of custom .prompt files to execute (supports relative and absolute paths)"
    required: false
    type: string
    default: "[]"

  action:
    description: "Determines what to do with the result. Supported: comment"
    required: true
    type: string
    default: "comment"

  install-agent:
    description: "Boolean flag to control whether to install the agent automatically. Defaults to true."
    required: false
    type: boolean
    default: true

  agent:
    description: "Which agent to use. Supported: cursor, claude, gemini, codex, amp, opencode"
    required: false
    type: string
    default: "cursor"

  scope:
    description: "Analysis scope: 'changed' to analyze only PR changed files, 'all' to analyze entire codebase"
    required: false
    type: string
    default: "changed"

  logging:
    description: "Logging level: 'info' for normal output, 'debug' for detailed debugging information"
    required: false
    type: string
    default: "info"

runs:
  using: "composite"
  steps:
    - name: Install Agent (if enabled)
      if: ${{ inputs.install-agent == 'true' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/install_agent.sh "${{ inputs.agent }}"

    - name: Execute Rules and Custom Prompt
      shell: bash
      env:
        MODEL: ${{ env.MODEL }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        LOGGING_LEVEL: ${{ inputs.logging }}
      run: python3 ${{ github.action_path }}/scripts/run_prompts.py "${{ inputs.rules }}" "${{ inputs.custom }}" "${{ inputs.agent }}" "${{ inputs.scope }}" "${{ inputs.customFiles }}"

    - name: Post Results as PR Comment
      if: ${{ inputs.action == 'comment' }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_EVENT_NUMBER: ${{ github.event.number }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: ${{ github.action_path }}/scripts/post_comment.sh results.json
